<BlazorApp1.common.CodeHighlight>
@@inject IJSRuntime JS
&lt;script src="https://code.jquery.com/jquery-3.3.1.min.js?v=9.0.3" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css?v=9.0.3" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous"&gt;
&lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css?v=9.0.3" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous"&gt;
&lt;script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js?v=9.0.3" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;style&gt;

    .weekend {
        background: #f4f7f4 !important;
    }

    .gantt_selected .weekend {
        background: #dadcda !important;
    }

    .well {
        text-align: right;
    }

    @@media (max-width: 991px) {
        .nav-stacked &gt; li {
            float: left;
        }
    }

    .container-fluid .row {
        margin-bottom: 10px;
    }

    .container-fluid .gantt_wrapper {
        height: 700px;
        width: 100%;
    }

    .gantt_container {
        border-radius: 4px;
    }

    .gantt_grid_scale {
        background-color: transparent;
    }

    .gantt_hor_scroll {
        margin-bottom: 1px;
    }
&lt;/style&gt;
&lt;div class="container-fluid"&gt;
    &lt;div class="row"&gt;
        &lt;div class="col-md-12"&gt;
            &lt;div class="navbar navbar-inverse"&gt;
                &lt;div class="container"&gt;
                    &lt;div class="navbar-header"&gt;
                        &lt;button type="button" class="navbar-toggle" data-toggle="collapse"
                                data-target=".navbar-collapse"&gt;
                            &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                            &lt;span class="icon-bar"&gt;&lt;/span&gt;
                            &lt;span class="icon-bar"&gt;&lt;/span&gt;
                            &lt;span class="icon-bar"&gt;&lt;/span&gt;
                        &lt;/button&gt;
                        &lt;a class="navbar-brand" href="#"&gt;Basic Gantt Chart&lt;/a&gt;
                    &lt;/div&gt;
                    &lt;div class="navbar-collapse collapse"&gt;
                        &lt;ul class="nav navbar-nav"&gt;
                            &lt;li class="dropdown"&gt;
                                &lt;a href="#" class="dropdown-toggle" data-toggle="dropdown"&gt;
                                    Project &lt;span class="caret"&gt;&lt;/span&gt;
                                &lt;/a&gt;
                                &lt;ul class="dropdown-menu" role="menu"&gt;
                                    &lt;li&gt;&lt;a href="#"&gt;Project information&lt;/a&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;a href="#"&gt;Custom fields&lt;/a&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;a href="#"&gt;Change working time&lt;/a&gt;&lt;/li&gt;
                                    &lt;li class="divider"&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;a href="#"&gt;Export&lt;/a&gt;&lt;/li&gt;
                                &lt;/ul&gt;
                            &lt;/li&gt;
                            &lt;li class="dropdown"&gt;
                                &lt;a href="#" class="dropdown-toggle" data-toggle="dropdown"&gt;
                                    Task &lt;span class="caret"&gt;&lt;/span&gt;
                                &lt;/a&gt;
                                &lt;ul class="dropdown-menu" role="menu"&gt;
                                    &lt;li&gt;&lt;a href="#"&gt;Add task&lt;/a&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;a href="#"&gt;Add milestone&lt;/a&gt;&lt;/li&gt;
                                    &lt;li class="divider"&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;a href="#"&gt;Summary&lt;/a&gt;&lt;/li&gt;
                                &lt;/ul&gt;
                            &lt;/li&gt;
                            &lt;li&gt;&lt;a href="#"&gt;Team&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="#"&gt;Format&lt;/a&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="row"&gt;
        &lt;div class="col-md-2 col-md-push-10"&gt;
            &lt;div class="panel panel-default"&gt;
                &lt;div class="panel-heading"&gt;
                    &lt;h3 class="panel-title"&gt;Gantt info&lt;/h3&gt;
                &lt;/div&gt;
                &lt;div class="panel-body"&gt;
                    &lt;ul class="nav nav-pills nav-stacked" id="gantt_info"&gt;
                    &lt;/ul&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col-md-10 col-md-pull-2"&gt;
            &lt;Gantt @@ref=gantt firstRender=init class="gantt_wrapper panel"&gt;&lt;/Gantt&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="row"&gt;
        &lt;div class="col-md-12"&gt;
            &lt;div class="well"&gt;
                &lt;div&gt;
                    &lt;a class="logo" title="DHTMLX - JavaScript Web App Framework &amp; UI Widgets"
                       href="https://dhtmlx.com/docs/products/dhtmlxGantt/"&gt;© DHTMLX&lt;/a&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
    var getListItemHTML = function (type, count, active) {
        return '&lt;li' + (active ? ' class="active"' : '') + '&gt;&lt;a href="#"&gt;' + type + 's &lt;span class="badge"&gt;' + count + '&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;';
    };
    var updateInfo = function (gantt) {
        var state = gantt.getState(),
        tasks = gantt.getTaskByTime(state.min_date, state.max_date),
        types = gantt.config.types,
        result = {},
        html = "",
        active = false;

        // get available types
        result[types.task] = 0;
        result[types.project] = 0;
        result[types.milestone] = 0;

        // sort tasks by type
        for (var i = 0, l = tasks.length; i &lt; l; i++) {
            if (tasks[i].type &amp;&amp; result[tasks[i].type] != "undefined")
                result[tasks[i].type] += 1;
            else
                result[types.task] += 1;
        }
        // render list items for each type
        for (var j in result) {
            if (j == types.task)
                active = true;
            else
                active = false;
            html += getListItemHTML(j, result[j], active);
        }

        document.getElementById("gantt_info").innerHTML = html;
    };
&lt;/script&gt;
@@code {
    private string id = Guid.NewGuid().ToString();
    private Gantt gantt;
    private DotNetObjectReference&lt;_17_bootstrap&gt;? dotNetRef;
    protected override void OnInitialized()
    {
        dotNetRef = DotNetObjectReference.Create(this);
    }
    private Tasks demo_tasks = new Tasks
        {
            data = new List&lt;Task_Data&gt;
            {
                new Task_Data{id="1", text="Office itinerancy", type="project", progress= 0.4, open= false},
                new Task_Data{id="2", text="Office facing", type="project", start_date="02-04-2023", duration=8, progress= 0.6, parent="1", open= true},
                new Task_Data{id="3", text="Furniture installation", type="project", start_date="11-04-2023", duration=8, parent="1", progress= 0.6, open= true},
                new Task_Data{id="4", text="The employee relocation", type="project", start_date="13-04-2023", duration=6, parent="1", progress= 0.5, open= true},
                new Task_Data{id="5", text="Interior office", start_date="02-04-2023", duration=7, parent="2", progress= 0.6, open= true},
                new Task_Data{id="6", text="Air conditioners check", start_date="03-04-2023", duration=7, parent="2", progress= 0.6, open= true},
                new Task_Data{id="7", text="Workplaces preparation", start_date="11-04-2023", duration=8, parent="3", progress= 0.6, open= true},
                new Task_Data{id="8", text="Preparing workplaces", start_date="14-04-2023", duration=5, parent="4", progress= 0.5, open= true},
                new Task_Data{id="9", text="Workplaces importation", start_date="14-04-2023", duration=4, parent="4", progress= 0.5, open= true},
                new Task_Data{id="10", text="Workplaces exportation", start_date="14-04-2023", duration=3, parent="4", progress= 0.5, open= true},
                new Task_Data{id="11", text="Product launch", type="project", progress= 0.6, open= true},
                new Task_Data{id="12", text="Perform Initial testing", start_date="03-04-2023", duration=5, parent="11", progress= 1, open= true},
                new Task_Data{id="13", text="Development", type="project", start_date="02-04-2023", duration=7, parent="11", progress= 0.5, open= true},
                new Task_Data{id="14", text="Analysis", start_date="02-04-2023", duration=6, parent="11", progress= 0.8, open= true},
                new Task_Data{id="15", text="Design", type="project", start_date="02-04-2023", duration=5, parent="11", progress= 0.2, open= false},
                new Task_Data{id="16", text="Documentation creation", start_date="02-04-2023", duration=7, parent="11", progress= 0, open= true},
                new Task_Data{id="17", text="Develop System", start_date="03-04-2023", duration=2, parent="13", progress= 1, open= true},
                new Task_Data{id="25", text="Beta Release", start_date="06-04-2023",type="milestone", parent="13", progress= 0, open= true},
                new Task_Data{id="18", text="Integrate System", start_date="08-04-2023", duration=2, parent="13", progress= 0.8, open= true},
                new Task_Data{id="19", text="Test", start_date="10-04-2023", duration=4, parent="13", progress= 0.2, open= true},
                new Task_Data{id="20", text="Marketing", start_date="10-04-2023", duration=4, parent="13", progress= 0, open= true},
                new Task_Data{id="21", text="Design database", start_date="03-04-2023", duration=4, parent="15", progress= 0.5, open= true},
                new Task_Data{id="22", text="Software design", start_date="03-04-2023", duration=4, parent="15", progress= 0.1, open= true},
                new Task_Data{id="23", text="Interface setup", start_date="03-04-2023", duration=5, parent="15", progress= 0, open= true},
                new Task_Data{id="24", text="Release v1.0", start_date="15-04-2023",type="milestone", parent="11", progress= 0, open= true}
            },
            links = new List&lt;Task_Link&gt;
            {
                new Task_Link{id= "1", source= "1", target= "2", type= "1"},

                new Task_Link{id= "2", source= "2", target= "3", type= "0"},
                new Task_Link{id= "3", source= "3", target= "4", type= "0"},
                new Task_Link{id= "4", source= "2", target= "5", type= "2"},
                new Task_Link{id= "5", source= "2", target= "6", type= "2"},
                new Task_Link{id= "6", source= "3", target= "7", type= "2"},
                new Task_Link{id= "7", source= "4", target= "8", type= "2"},
                new Task_Link{id= "8", source= "4", target= "9", type= "2"},
                new Task_Link{id= "9", source= "4", target= "10", type= "2"},

                new Task_Link{id= "10", source= "11", target= "12", type= "1"},
                new Task_Link{id= "11", source= "11", target= "13", type= "1"},
                new Task_Link{id= "12", source= "11", target= "14", type= "1"},
                new Task_Link{id= "13", source= "11", target= "15", type= "1"},
                new Task_Link{id= "14", source= "11", target= "16", type= "1"},

                new Task_Link{id= "15", source= "13", target= "17", type= "1"},
                new Task_Link{id= "16", source= "17", target= "25", type= "0"},
                new Task_Link{id= "23", source= "25", target= "18", type= "0"},
                new Task_Link{id= "17", source= "18", target= "19", type= "0"},
                new Task_Link{id= "18", source= "19", target= "20", type= "0"},
                new Task_Link{id= "19", source= "15", target= "21", type= "2"},
                new Task_Link{id= "20", source= "15", target= "22", type= "2"},
                new Task_Link{id= "21", source= "15", target= "23", type= "2"},
                new Task_Link{id= "22", source= "13", target= "24", type= "0"}
            }
        };
    private void init()
    {
        gantt.templates_scale_cell_class(@@"if (date.getDay() == 0 || date.getDay() == 6) {
			return 'weekend';
		}");
        gantt.templates_timeline_cell_class(@@"if (date.getDay() == 0 || date.getDay() == 6) {
			return 'weekend';
		}");
        gantt.templates_rightside_text(@@"if (task.type == 'milestone') {
			return task.text;
		}
		return '';");
        gantt.set_property("config.columns", new object[]
        {
            new {name= "text", label= "Task name", resize= true, width= "*", tree= true},
            new {name= "start_date", label= "Start time", resize= true, align= "center", width= 80},
            new {name= "duration", label= "Duration", resize= true, align= "center", width= 60},
            new {name= "add", label= "", width= 44}
        });
        gantt.set_property("config.grid_width", 390);
        gantt.set_property("config.date_grid", "%F %d");
        gantt.set_property("config.scale_height", 60);
        gantt.set_property("config.scales", new object[]
        {
            new {unit= "day", step= 1, format= "%d %M"},
            new {unit= "week", step= 1, format= "Week #%W"}
        });

        JS.InvokeVoidAsync("BlazorGantt.add_to_dictionary", this.id, this.dotNetRef);
        gantt.attachEvent("onAfterTaskAdd", @@$"let dotnet = BlazorGantt.get_from_dictionary('{this.id}');dotnet.invokeMethodAsync('updateInfo');");
        gantt.attachEvent("onAfterTaskDelete", @@$"let dotnet = BlazorGantt.get_from_dictionary('{this.id}');dotnet.invokeMethodAsync('updateInfo');");
        gantt.init();
        gantt.parse(demo_tasks);
        this.updateInfo();
    }
    [JSInvokable]
    public async Task updateInfo()
    {
        await JS.InvokeVoidAsync("updateInfo", this.gantt.js_gantt);
    }
}
</BlazorApp1.common.CodeHighlight>