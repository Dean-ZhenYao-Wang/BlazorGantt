<BlazorApp1.common.CodeHighlight>
@@inject IJSRuntime JS

&lt;Gantt @@ref=gantt firstRender=init style="width:1020px; height:400px;" /&gt;

@@code {
    private string id = Guid.NewGuid().ToString();
    private Gantt gantt;
    private DotNetObjectReference&lt;_11_clickable_links&gt;? dotNetRef;
    protected override void OnInitialized()
    {
        dotNetRef = DotNetObjectReference.Create(this);
    }
    private async Task init()
    {
        gantt.init();
        gantt.parse(common.testdata.demo_tasks);
        JS.InvokeVoidAsync("BlazorGantt.add_to_dictionary", this.id, this.dotNetRef);
        //可以把父组件的dotnet传递进去使用
        gantt.attachEvent("onLinkClick", @@$"let dotnet = BlazorGantt.get_from_dictionary('{this.id}');dotnet.invokeMethodAsync('onLinkClick',id);");
    }
    [JSInvokable]
    public async Task onLinkClick(string id)
    {
        Task_Link link = await this.gantt.getLink(id);
        Task_Data src = await this.gantt.getTask(link.source);
        Task_Data trg = await this.gantt.getTask(link.target);
        Config_Link types = await this.gantt.get_Property&lt;Config_Link&gt;("config.links");
        string first = string.Empty;
        string second = string.Empty;
        if (link.type.Equals(types.finish_to_start))
        {
            first = "finish";
            second = "start";
        }
        else if (link.type.Equals(types.start_to_start))
        {
            first = "start";
            second = "start";
        }
        else if (link.type.Equals(types.finish_to_finish))
        {
            first = "finish";
            second = "finish";
        }
        this.gantt.message("Must " + first + " &lt;b&gt;" + src.text + "&lt;/b&gt; to " + second + " &lt;b&gt;" + trg.text + "&lt;/b&gt;");
    }
}
</BlazorApp1.common.CodeHighlight>